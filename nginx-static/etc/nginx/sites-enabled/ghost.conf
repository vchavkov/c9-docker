#############################################
# cdn-cache-vhost
#############################################
server {
    server_name                  proxy.minerva.net;

    # define nginx variables
    set $cache_name "three";
    set $do_not_cache 0;
    set $skip_reason "";
    set $bypass 0;

    # security for bypass so localhost can empty cache
    if ($remote_addr ~ "^(127|172|192)") {
        set $bypass $http_secret_header;
    }

    # etag                         on;
    # add_header                   Pragma public;
    # add_header                   Cache-Control "public, must-revalidate, proxy-revalidate";
    # add_header                   Access-Control-Allow-Origin *;
    more_clear_headers           'Server';
    more_clear_headers           'X-Powered-By';

    # allows purging via special URL
    location ~ /purge(/.*) {
        # allow 127.0.0.1;
        # allow 172.31.0.0/16;
        # allow 192.168.3.0/24;
        # allow some_other_ip_or_mask;
        # deny all;
        add_header               X-Cache-Purge $scheme://$host/$1;
        proxy_cache_purge        $cache_name $scheme://$host/$1;
    }

    location / {
        proxy_connect_timeout    20s;
        proxy_buffering          on;
        proxy_cache_lock         on;
        proxy_cache              $cache_name;
        #proxy_cache_key         $request_uri:$http_accept_encoding:$http_accept;
        proxy_cache_key          $scheme://$host$request_uri;
        proxy_cache_valid        200 24h;
        proxy_cache_valid        404 5m;
        proxy_cache_valid        504 1m;
        proxy_cache_use_stale    error timeout invalid_header updating
                                 http_500 http_502 http_503 http_504;
        proxy_ignore_headers     Cache-Control Set-Cookie;

        # configure proxy-bypass
        proxy_cache_bypass       $bypass;

        # configure proxy-cache-purge
        proxy_cache_purge PURGE from 127.0.0.1;

        proxy_pass               http://ghost-on-heroku.a.assistance.bg;
    }
}